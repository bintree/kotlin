== foo1 ==
fun foo1(numbers: Collection<Int>) {
    for (i in numbers) {
        val b: Boolean
        if (1 < 2) {
            b = false
        }
        else {
            b = true
        }
        use(b)
        continue
    }
}
---------------------
<START>                                                                                                       INIT: in: {}    out: {}    USE: in: {b=LAST_WRITTEN, numbers=LAST_READ}    out: {b=LAST_WRITTEN, numbers=LAST_READ}
v(numbers: Collection<Int>)                                                                                   INIT: in: {}    out: {numbers=I- D+}    USE: in: {b=LAST_WRITTEN, numbers=LAST_READ}    out: {b=LAST_WRITTEN, numbers=LAST_READ}
w(numbers)                                                                                                    INIT: in: {numbers=I- D+}    out: {numbers=I+ D+}    USE: in: {b=LAST_WRITTEN, numbers=LAST_READ}    out: {b=LAST_WRITTEN, numbers=LAST_READ}
mark({ for (i in numbers) { val b: Boolean if (1 < 2) { b = false } else { b = true } use(b) continue } })    INIT: in: {numbers=I+ D+}    out: {numbers=I+ D+}    USE: in: {b=LAST_WRITTEN, numbers=LAST_READ}    out: {b=LAST_WRITTEN, numbers=LAST_READ}
mark(for (i in numbers) { val b: Boolean if (1 < 2) { b = false } else { b = true } use(b) continue })        INIT: in: {numbers=I+ D+}    out: {numbers=I+ D+}    USE: in: {b=LAST_WRITTEN, numbers=LAST_READ}    out: {b=LAST_WRITTEN, numbers=LAST_READ}
r(numbers)                                                                                                    INIT: in: {numbers=I+ D+}    out: {numbers=I+ D+}    USE: in: {b=LAST_WRITTEN}    out: {b=LAST_WRITTEN, numbers=LAST_READ}
v(i)                                                                                                          INIT: in: {numbers=I+ D+}    out: {i=I- D+, numbers=I+ D+}    USE: in: {b=LAST_WRITTEN}    out: {b=LAST_WRITTEN}
w(i)                                                                                                          INIT: in: {i=I- D+, numbers=I+ D+}    out: {i=I+ D+, numbers=I+ D+}    USE: in: {b=LAST_WRITTEN}    out: {b=LAST_WRITTEN}
jmp?(L2)                                                                                                      INIT: in: {i=I+ D+, numbers=I+ D+}    out: {i=I+ D+, numbers=I+ D+}    USE: in: {b=LAST_WRITTEN}    out: {b=LAST_WRITTEN}
mark({ val b: Boolean if (1 < 2) { b = false } else { b = true } use(b) continue })                           INIT: in: {b=I+ D+, i=I+ D+, numbers=I+ D+}    out: {b=I+ D+, i=I+ D+, numbers=I+ D+}    USE: in: {b=LAST_WRITTEN}    out: {b=LAST_WRITTEN}
v(val b: Boolean)                                                                                             INIT: in: {b=I+ D+, i=I+ D+, numbers=I+ D+}    out: {b=I+ D+, i=I+ D+, numbers=I+ D+}    USE: in: {b=LAST_WRITTEN}    out: {b=LAST_WRITTEN}
mark(if (1 < 2) { b = false } else { b = true })                                                              INIT: in: {b=I+ D+, i=I+ D+, numbers=I+ D+}    out: {b=I+ D+, i=I+ D+, numbers=I+ D+}    USE: in: {b=LAST_WRITTEN}    out: {b=LAST_WRITTEN}
mark(1 < 2)                                                                                                   INIT: in: {b=I+ D+, i=I+ D+, numbers=I+ D+}    out: {b=I+ D+, i=I+ D+, numbers=I+ D+}    USE: in: {b=LAST_WRITTEN}    out: {b=LAST_WRITTEN}
r(1)                                                                                                          INIT: in: {b=I+ D+, i=I+ D+, numbers=I+ D+}    out: {b=I+ D+, i=I+ D+, numbers=I+ D+}    USE: in: {b=LAST_WRITTEN}    out: {b=LAST_WRITTEN}
r(2)                                                                                                          INIT: in: {b=I+ D+, i=I+ D+, numbers=I+ D+}    out: {b=I+ D+, i=I+ D+, numbers=I+ D+}    USE: in: {b=LAST_WRITTEN}    out: {b=LAST_WRITTEN}
call(<, compareTo)                                                                                            INIT: in: {b=I+ D+, i=I+ D+, numbers=I+ D+}    out: {b=I+ D+, i=I+ D+, numbers=I+ D+}    USE: in: {b=LAST_WRITTEN}    out: {b=LAST_WRITTEN}
jf(L6)                                                                                                        INIT: in: {b=I+ D+, i=I+ D+, numbers=I+ D+}    out: {b=I+ D+, i=I+ D+, numbers=I+ D+}    USE: in: {b=LAST_WRITTEN}    out: {b=LAST_WRITTEN}
mark({ b = false })                                                                                           INIT: in: {b=I+ D+, i=I+ D+, numbers=I+ D+}    out: {b=I+ D+, i=I+ D+, numbers=I+ D+}    USE: in: {b=LAST_WRITTEN}    out: {b=LAST_WRITTEN}
r(false)                                                                                                      INIT: in: {b=I+ D+, i=I+ D+, numbers=I+ D+}    out: {b=I+ D+, i=I+ D+, numbers=I+ D+}    USE: in: {b=LAST_WRITTEN}    out: {b=LAST_WRITTEN}
w(b)                                                                                                          INIT: in: {b=I+ D+, i=I+ D+, numbers=I+ D+}    out: {b=I+ D+, i=I+ D+, numbers=I+ D+}    USE: in: {b=LAST_READ}    out: {b=LAST_WRITTEN}
jmp(L7)                                                                                                       INIT: in: {b=I+ D+, i=I+ D+, numbers=I+ D+}    out: {b=I+ D+, i=I+ D+, numbers=I+ D+}    USE: in: {b=LAST_READ}    out: {b=LAST_READ}
mark({ b = true })                                                                                            INIT: in: {b=I+ D+, i=I+ D+, numbers=I+ D+}    out: {b=I+ D+, i=I+ D+, numbers=I+ D+}    USE: in: {b=LAST_WRITTEN}    out: {b=LAST_WRITTEN}
r(true)                                                                                                       INIT: in: {b=I+ D+, i=I+ D+, numbers=I+ D+}    out: {b=I+ D+, i=I+ D+, numbers=I+ D+}    USE: in: {b=LAST_WRITTEN}    out: {b=LAST_WRITTEN}
w(b)                                                                                                          INIT: in: {b=I+ D+, i=I+ D+, numbers=I+ D+}    out: {b=I+ D+, i=I+ D+, numbers=I+ D+}    USE: in: {b=LAST_READ}    out: {b=LAST_WRITTEN}
mark(use(b))                                                                                                  INIT: in: {b=I+ D+, i=I+ D+, numbers=I+ D+}    out: {b=I+ D+, i=I+ D+, numbers=I+ D+}    USE: in: {b=LAST_READ}    out: {b=LAST_READ}
r(b)                                                                                                          INIT: in: {b=I+ D+, i=I+ D+, numbers=I+ D+}    out: {b=I+ D+, i=I+ D+, numbers=I+ D+}    USE: in: {b=LAST_WRITTEN}    out: {b=LAST_READ}
call(use, use)                                                                                                INIT: in: {b=I+ D+, i=I+ D+, numbers=I+ D+}    out: {b=I+ D+, i=I+ D+, numbers=I+ D+}    USE: in: {b=LAST_WRITTEN}    out: {b=LAST_WRITTEN}
jmp(L4 [loop entry point])                                                                                    INIT: in: {b=I+ D+, i=I+ D+, numbers=I+ D+}    out: {b=I+ D+, i=I+ D+, numbers=I+ D+}    USE: in: {b=LAST_WRITTEN}    out: {b=LAST_WRITTEN}
jmp?(L4 [loop entry point])                                                                                   INIT:    USE:
read (Unit)                                                                                                   INIT: in: {i=I+ D+, numbers=I+ D+}    out: {i=I+ D+, numbers=I+ D+}    USE: in: {}    out: {}
<END>                                                                                                         INIT: in: {i=I+ D+, numbers=I+ D+}    out: {i=I+ D+, numbers=I+ D+}    USE: in: {}    out: {}
<ERROR>                                                                                                       INIT: in: {}    out: {}    USE: in: {}    out: {}
<SINK>                                                                                                        INIT: in: {i=I+ D+, numbers=I+ D+}    out: {i=I+ D+, numbers=I+ D+}    USE: in: {}    out: {}
=====================
== use ==
fun use(vararg a: Any?) = a
---------------------
<START>              INIT: in: {}    out: {}    USE: in: {a=LAST_READ}    out: {a=LAST_READ}
v(vararg a: Any?)    INIT: in: {}    out: {a=I- D+}    USE: in: {a=LAST_READ}    out: {a=LAST_READ}
w(a)                 INIT: in: {a=I- D+}    out: {a=I+ D+}    USE: in: {a=LAST_READ}    out: {a=LAST_READ}
r(a)                 INIT: in: {a=I+ D+}    out: {a=I+ D+}    USE: in: {}    out: {a=LAST_READ}
<END>                INIT: in: {a=I+ D+}    out: {a=I+ D+}    USE: in: {}    out: {}
<ERROR>              INIT: in: {}    out: {}    USE: in: {}    out: {}
<SINK>               INIT: in: {a=I+ D+}    out: {a=I+ D+}    USE: in: {}    out: {}
=====================
