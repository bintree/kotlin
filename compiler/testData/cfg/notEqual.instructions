== neq ==
fun neq(a: Int, b: Int) {
    if (a != b) {}
}
---------------------
L0:
  0 <START>
  0 v(a: Int)
  0 w(a)
  0 v(b: Int)
  0 w(b)
  1 mark({ if (a != b) {} })
  1 mark(if (a != b) {})
  1 mark(a != b)
  1 r(a)
  1 r(b)
  1 call(!=, equals)
  1 jf(L2)                      NEXT:[read (Unit), mark({})]
  2 mark({})
  2 read (Unit)
  1 jmp(L3)                     NEXT:[<END>]
L2:
  1 read (Unit)                 PREV:[jf(L2)]
L1:
L3:
  0 <END>                       NEXT:[<SINK>]                      PREV:[jmp(L3), read (Unit)]
error:
  0 <ERROR>                     PREV:[]
sink:
  0 <SINK>                      PREV:[<ERROR>, <END>]
=====================
