== Test ==
class Test {
  var x : Int;
}
---------------------
L0:
  0 <START>
  0 v(var x : Int;)
L1:
  0 <END>              NEXT:[<SINK>]
error:
  0 <ERROR>            PREV:[]
sink:
  0 <SINK>             PREV:[<ERROR>, <END>]
=====================
== assignments ==
fun assignments() : Unit {
    var x = 1
    x = 2
    x += 2

    x = if (true) 1 else 2

    val y = true && false
    val z = false && true

    val t = Test();
    t.x = 1
}
---------------------
L0:
  0 <START>
  1 mark({ var x = 1 x = 2 x += 2 x = if (true) 1 else 2 val y = true && false val z = false && true val t = Test(); t.x = 1 })
  1 v(var x = 1)
  1 r(1)
  1 w(x)
  1 r(2)
  1 w(x)
  1 mark(x += 2)
  1 r(x)
  1 r(2)
  1 call(+=, plus)
  1 w(x)
  1 mark(if (true) 1 else 2)
  1 r(true)
  1 jf(L2)                                                                                                                         NEXT:[r(2), r(1)]
  1 r(1)
  1 jmp(L3)                                                                                                                        NEXT:[w(x)]
L2:
  1 r(2)                                                                                                                           PREV:[jf(L2)]
L3:
  1 w(x)                                                                                                                           PREV:[jmp(L3), r(2)]
  1 v(val y = true && false)
  1 r(true)
  1 jf(L4)                                                                                                                         NEXT:[r(true && false), r(false)]
  1 r(false)
L4:
  1 r(true && false)                                                                                                               PREV:[jf(L4), r(false)]
  1 w(y)
  1 v(val z = false && true)
  1 r(false)
  1 jf(L5)                                                                                                                         NEXT:[r(false && true), r(true)]
  1 r(true)
L5:
  1 r(false && true)                                                                                                               PREV:[jf(L5), r(true)]
  1 w(z)
  1 v(val t = Test())
  1 mark(Test())
  1 call(Test, <init>)
  1 w(t)
  1 r(1)
  1 r(t)
  1 w(t.x)
L1:
  0 <END>                                                                                                                          NEXT:[<SINK>]
error:
  0 <ERROR>                                                                                                                        PREV:[]
sink:
  0 <SINK>                                                                                                                         PREV:[<ERROR>, <END>]
=====================
